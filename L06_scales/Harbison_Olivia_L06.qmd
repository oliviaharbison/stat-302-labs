---
title: "L06 Scales, Axes, & Legends"
subtitle: "Data Visualization (STAT 302)" 
author: "Olivia Harbison"

format:
  html:
    toc: true
    embed-resources: true
    code-fold: show
    link-external-newwindow: true
    fig-dpi: 300

execute:
  warning: false

from: markdown+emoji 
---


## Overview

The goal of this lab is to explore ways to manage and manipulate scales, axes, and legends within `ggplot2`. 

## Datasets

We'll be using the `tech_stocks.rda`, `corruption.rda`, `cdc.txt`, and a toy dataset.

```{r}
#| label: load-pkgs-data

# load package(s)
library(tidyverse)
library(ggrepel)

# load datasets
load("data/corruption.rda")
load("data/tech_stocks.rda")

# Read in the cdc dataset
cdc <- read_delim(file = "data/cdc.txt", delim = "|") %>%
  mutate(genhlth = factor(
    genhlth,
    levels = c("excellent", "very good", "good", "fair", "poor")
  ))

# set seed
set.seed(86420)

# selecting a random subset of size 100
cdc_small <- cdc %>% slice_sample(n = 100)

# Generating toy dataset for exercise 2
toy_data <- tibble(
  theta = seq(0, 2 * pi, length.out = 100),
  obs = rnorm(100, sin(theta), 0.1),
  larger_than = ifelse(abs(obs) > abs(sin(theta)), "1", "0")
)
```

## Exercise 1

Using the `tech_stocks` dataset, recreate the following graphic as precisely as possible.

*Hints:*

- `key_glyph`
- `scales` package will be useful
- legend `linewidth` is 1.3
- legend useful values: 0.75 and 0.85
- Eliminated extra space in horizontal direction

::: {.callout-tip icon=false}

## Solution
```{r}
ggplot(tech_stocks, aes(x = date, y = price_indexed, color = company)) +
  geom_line(key_glyph = "timeseries") +
  theme_minimal() +
  scale_x_date(NULL,
               expand = c(0, 0)) +
  scale_y_continuous(
    NULL,
    breaks = seq(0, 600, 100),
    position = "right",
    labels = scales::label_dollar()
  ) +
  theme(legend.position = c(0.75, 0.85)) +
  labs(color = NULL,
       title = "Stock price, indexed") +
  scale_color_discrete(NULL,
                       limits = c("Facebook", "Alphabet", "Microsoft", "Apple")) +
  guides(color = guide_legend(override.aes = list(linewidth = 1.3)))

```

:::

## Exercise 2

Using the `corruption.rda` dataset, recreate the following graphic as precisely as possible.

*Hints:*
  
- Only use 2015 data
- Transparency is 0.6
- `"y ~ log(x)"`; method `"lm"`; and color is `grey40`
- Point size is 3 in legend
- color palette is `"Set1"`
- Package `ggrepel`
  - `box.padding` is 0.6
  - Minimum segment length is 0
  - seed is 9876

::: {.callout-tip icon=false}

## Solution
```{r}
corr2015 <- corruption %>%
  filter(year == 2015) %>%
  na.omit()

country_highlight <-
  c(
    "United States",
    "Singapore",
    "Japan",
    "Chile",
    "Argentina",
    "China",
    "Iraq",
    "Ghana",
    "Niger"
  )

label_info <- corr2015 %>%
  filter(country %in% country_highlight)

ggplot(corr2015, aes(x = cpi, y = hdi)) +
  geom_point(alpha = 0.6, aes(color = region)) +
  geom_smooth(
    formula = y ~ log(x),
    method = "lm",
    color = "grey40",
    se = FALSE
  ) +
  scale_color_brewer(palette = "Set1") +
  theme_minimal() +
  labs(
    title = "Corruption and human development (2015)",
    y = "Human Development Index, 2015\n(1.0 = most developed)",
    x = "Corruption Perceptions Index, 2015\n(100 = least corrupt)",
    color = NULL
  ) +
  guides(color = guide_legend(override.aes = list(size = 3))) +
  theme(legend.position = c(1, 0),
        legend.justification = c(1, 0)) +
  geom_text_repel(
    data = label_info,
    aes(label = country),
    box.padding = 0.6,
    min.segment.length = 0,
    seed = 9876
  )

```

:::
  
## Exercise 3

Use `toy_data` to recreate the following graphic as precisely as possible.

*Hints:*

- Point sizes are 3
- Point colors: `#E66100`, `#5D3A9B`
- Point transparency is 0.8
- `stat_function()` will be useful
  - line size is 1.3 and line color is `#56B4E9`
- `quote()` will be useful

::: {.callout-tip icon=false}

## Solution
```{r}
ggplot(toy_data, aes(theta, obs)) +
  geom_point(
    aes(color = larger_than),
    alpha = 0.8,
    size = 3,
    show.legend = FALSE
  ) +
  theme_minimal() +
  scale_color_manual(values = c("#5D3A9B", "#E66100")) +
  stat_function(fun = sin,
                linewidth = 1.3,
                color = "#56B4E9") +
  scale_x_continuous(quote(theta)) +
  scale_y_continuous(quote(sin(theta)))
  
```

:::

## Exercise 4

Using `cdc_small`, construct a scatterplot of `weight` by `height` with the following requirements: 

- Size of plotting characters should be 3.✅
- Color and shape should both identify `genhlth`.✅
- Only one legend: for both color and shape.✅
- Legend title should be "General Health?" with a newline starting after general.✅
- Legend categories should be ordered from excellent (top) to poor (bottom) with each word in category capitalized in the legend.✅
- Legend should be placed in the lower right-hand corner of the plotting area. 
- Color should follow the `"Set1"` palette.✅
- Shape should have a solid triangle (17) for excellent, solid circle (19) for very good, an `x` (4) for poor, an hollow rotated square with an `x` in it (9) for fair, and a solid square (15) for good.✅
- `height` values should be limited between 55 and 80.✅
- `height` axis should display every 5th number between 55 and 80 and be appropriately labeled (i.e. `55 in`, `60 in`, ..., `80 in`). No axis title is necessary.✅
- `weight` values should be limited between 100 and 300. ✅
- `weight` axis should be `trans` to log base 10 scale, but still display weights in pounds starting at 100 and displaying every 25 pounds until 300. Must be appropriately labeled (i.e. `100 lbs`, `125 lbs`, ..., `300 lbs`). No axis title is necessary.✅
- Graph title should be `CDC BRFSS: Weight by Height`.✅
- Minimal theme.✅



::: {.callout-tip icon=false}

## Solution
```{r}
ggplot(cdc_small,
       aes(
         x = height,
         y = weight,
         color = genhlth,
         shape = genhlth
       )) +
  geom_point(size = 3) +
  labs(color = "General\nHealth?",
       shape = "General\nHealth?") +
  theme_minimal() +
  scale_color_brewer(
    labels = c("Excellent", "Very Good", "Good", "Fair", "Poor"),
    palette = "Set1"
  ) +
  scale_shape_manual(
    labels = c("Excellent", "Very Good", "Good", "Fair", "Poor"),
    values = c(17, 19, 15, 9, 4)
  ) +
  theme(legend.position = c(1, 0),
        legend.justification = c(1, 0)) +
  lims(x = c(55, 80), y = c(100, 300)) +
  scale_x_continuous(
    n.breaks = 6,
    labels = c("55 in", "60 in", "65 in", "70 in", "75 in", "80 in"),
    limits = range(55, 80)
  ) +
  scale_y_continuous(
    trans = "log10",
    n.breaks = 9,
    labels = c(
      "100 lbs",
      "125 lbs",
      "150 lbs",
      "175 lbs",
      "200 lbs",
      "225 lbs",
      "250 lbs",
      "275 lbs",
      "300 lbs"
    )
  ) +
  labs(x = NULL,
       y = NULL,
       title = "CDC BRFSS: Weight by Height")


```

:::